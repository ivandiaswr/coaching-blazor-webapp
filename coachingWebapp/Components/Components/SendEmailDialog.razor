<MudDialog>
    <TitleContent>
        Compose Email
    </TitleContent>
    <DialogContent>
        <MudTextField Label="Subject" @bind-Value="EmailSubject" Required="true" />
        <MudTextField Label="Body" @bind-Value="EmailBody" Required="true" Lines="25" TextArea="true" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="SendEmails" Color="Color.Primary" Variant="Variant.Filled" Disabled="@IsSending">Send</MudButton>
        <MudButton OnClick="Cancel" Variant="Variant.Text">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public EventCallback<DialogResult> OnDialogResult { get; set; }
    [Parameter] public List<string> RecipientEmails { get; set; }
    private string EmailSubject { get; set; }
    private string EmailBody { get; set; }
    private bool IsSending { get; set; } = false;

    private async Task SendEmails()
    {
        IsSending = true;

        try
        {
            await EmailSubscriptionService.SendCustomEmailAsync(RecipientEmails, EmailSubject, EmailBody);
            await OnDialogResult.InvokeAsync(DialogResult.Ok(true));        
        }
        catch (Exception ex)
        {
           Console.WriteLine($"Error sending email: {ex.Message}");
            await OnDialogResult.InvokeAsync(DialogResult.Ok(false));
        }
        finally
        {
            IsSending = false;
        }
    }

    private async Task Cancel() => await OnDialogResult.InvokeAsync(DialogResult.Cancel());
}
