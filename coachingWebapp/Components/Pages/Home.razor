@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

@inject IEmailSubscriptionService EmailSubscriptionService
@inject IContactService ContactService

@inject NavigationManager NavigationManager
@inject ILogger<Home> Logger

@using BusinessLayer.Services.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using ModelLayer.Models

<PageTitle>Home</PageTitle>

<section id="hero">
    <div class="hero-container">
        <div class="hero-text">
            <h1>Transform Your Life with Expert Coaching</h1>
            <p class="hero-subtitle">Unlock your potential and achieve your goals with personalized guidance</p>
            <ul class="hero-features">
                <li><i class="fas fa-check"></i> <span>Free Initial Consultation</span></li>
                <li><i class="fas fa-check"></i> <span>Flexible Session Packages</span></li>
                <li><i class="fas fa-check"></i> <span>Unlimited Resource Access</span></li>
                <li><i class="fas fa-check"></i> <span>Complimentary Success Guide</span></li>
            </ul>
            <p class="hero-note">No long-term commitment required - cancel anytime</p>
            <div class="hero-buttons">
                <button @onclick="ShowGiftOffer" class="hero-button gift-button">
                    <i class="fa-solid fa-gift"></i>
                    Get Your Free Success Guide
                </button>
            </div>
        </div>
        <div class="hero-card">
            <img src="Images/itala.webp" alt="Ítala, Life Coach" class="coach-image">
            <div class="coach-info">
                <h2>Ítala</h2>
                <p>Your Dedicated Life Coach</p>
                <ul class="coach-credentials">
                    <li><i class="fas fa-pray"></i> Certified Religious Life Coach</li>
                    <li><i class="fas fa-star"></i> 10+ Years of Experience</li>
                    <li><i class="fas fa-user-graduate"></i> Personal Growth Specialist</li>
                </ul>
            </div>
            <div class="quote">
                <i class="fas fa-quote-left"></i>
                <p>"Coaching is unlocking a person's potential to maximize their own performance. It is helping them to learn rather than teaching them." <span class="quote-author">– John Whitmore</span></p>
            </div>
        </div>
    </div>
    @if (showGiftOffer)
    {
        <div class="gift-modal" @onclick="CloseGiftOfferIfClickedOutside">
            <div class="gift-modal-content" @onclick:stopPropagation>
                <h3>Unlock Your Free Guide!</h3>
                <p>Get instant access to expert tips and strategies to jumpstart your journey. <b>Your success story begins here.</b></p>
                <EditForm Model="@emailSubscription" OnValidSubmit="GetGiftBySubscribeNewsLetter" FormName="emailSubscriptionGiftForm">
                    <DataAnnotationsValidator />
                    
                    @if (isSubscribing)
                    {
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p>Subscribing...</p>
                        </div>
                    }
                    else
                    {
                        <InputText id="email" class="form-control" @bind-Value="emailSubscription.Email" placeholder="Enter your email" />
                        <button type="submit" class="btn btn-primary">Get My Free Guide</button>
                        <div class="row">
                            <div class="col">
                                <ValidationMessage For="@(() => emailSubscription.Email)" class="text-danger" />
                            </div>
                        </div>
                        <p class="privacy-notice">By signing up, you're agreeing to receive marketing emails from Jostic. You can unsubscribe at any time. For more details, check out our <a href="/privacy-policy">Privacy Policy</a>.</p>
                    }
                </EditForm>

                @if (!string.IsNullOrEmpty(subscriptionMessage) && !subscriptionSuccess)
                {
                    <div class="alert alert-danger mt-3" role="alert">
                        @subscriptionMessage
                    </div>
                }
                
                @if (subscriptionSuccess)
                {
                    <div class="alert alert-success" role="alert">
                        @subscriptionMessage
                    </div>
                }

                <button class="close-button" @onclick="CloseGiftOffer"><i class="fa-solid fa-circle-xmark"></i></button>
            </div>
        </div>
    }
</section> 

<section id="services">
    <div class="services-container">
        <h1>Transformative Coaching Services</h1>
        <p class="services-intro">Embark on a journey of personal and professional growth with our tailored coaching programs.</p>

        <div class="services-grid">
            <div class="service-category coaching">
                <h2>Core Coaching Programs</h2>
                <div class="service-cards">
                    <div class="service-card">
                        <div class="service-icon"><i class="fas fa-rocket"></i></div>
                        <h3>Personal Growth Acceleration</h3>
                        <p>Unlock your full potential and fast-track your personal development journey.</p>
                        <a href="/services/personal-growth" class="btn-learn-more">Explore Program</a>
                    </div>
                    <div class="service-card">
                        <div class="service-icon"><i class="fas fa-chart-line"></i></div>
                        <h3>Career Advancement Strategy</h3>
                        <p>Navigate career transitions and climb the professional ladder with confidence.</p>
                        <a href="/services/career-strategy" class="btn-learn-more">Discover Path</a>
                    </div>
                    <div class="service-card">
                        <div class="service-icon"><i class="fas fa-balance-scale"></i></div>
                        <h3>Life Balance Mastery</h3>
                        <p>Achieve harmony in your personal and professional life for overall well-being.</p>
                        <a href="/services/life-balance" class="btn-learn-more">Find Balance</a>
                    </div>
                    <div class="service-card">
                        <div class="service-icon"><i class="fas fa-handshake"></i></div>
                        <h3>Relationship Enhancement</h3>
                        <p>Strengthen personal and professional relationships for a more fulfilling life.</p>
                        <a href="/services/relationship-coaching" class="btn-learn-more">Improve Connections</a>
                    </div>
                </div>
            </div>

            <div class="service-category regulatory">
                <h2>Specialized Regulatory Support</h2>
                <div class="service-cards secondary">
                    <div class="service-card">
                        <div class="service-icon"><i class="fas fa-tags"></i></div>
                        <h3>UK Compliance Labeling</h3>
                        <p>Ensure your products meet UK labeling standards with expert guidance.</p>
                        <a href="/services/uk-labeling-compliance" class="btn-learn-more">Get Compliant</a>
                    </div>
                    <div class="service-card">
                        <div class="service-icon"><i class="fas fa-file-alt"></i></div>
                        <h3>Regulatory Document Review</h3>
                        <p>Expert review and approval of documentation for UK legal requirements.</p>
                        <a href="/services/documentation-review" class="btn-learn-more">Streamline Process</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section id="testimonials">
    <div class="testimonials-container">
        <h2>What My Clients Say</h2>
            <div class="testimonial-card">
                <p class="testimonial-text">"The coaching sessions have truly transformed my life. I feel more confident and motivated."</p>
                <p class="testimonial-author">- Jane Doe</p>
            </div>
            <div class="testimonial-card">
                <p class="testimonial-text">"Exceptional guidance and support throughout my career transition. Highly recommend!"</p>
                <p class="testimonial-author">- John Smith</p>
            </div>
            <div class="testimonial-card">
                <p class="testimonial-text">"The personalized approach helped me achieve my health and wellness goals."</p>
                <p class="testimonial-author">- Emily Davis</p>
            </div>
    </div>
</section>

<section id="contact">
    <div class="contact-wrapper">
        <div class="contact-container">
            <h2>Get in Touch</h2>
            <EditForm Model="@contact" OnValidSubmit="ContactSubmit" FormName="contactForm">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <InputText id="name" class="form-control" @bind-Value="contact.Name" placeholder="Your Name" />
                    <ValidationMessage For="@(() => contact.Name)" />
                </div>
                <div class="form-group">
                    <InputText id="email" class="form-control" @bind-Value="contact.Email" placeholder="Your Email" />
                    <ValidationMessage For="@(() => contact.Email)" />
                </div>
                <div class="form-group">
                    <InputTextArea id="message" class="form-control" @bind-Value="contact.Message" rows="4" placeholder="Your Message" />
                    <ValidationMessage For="@(() => contact.Message)" />
                </div>
                <button type="submit">Send Message</button>
            </EditForm>
            <div id="formStatus" class="form-status">@contactFormStatus</div>
        </div>
    </div>
</section>

@code {
    private EmailSubscription emailSubscription = new EmailSubscription();
    private string subscriptionMessage;
    private bool subscriptionSuccess = false;
    private bool isSubscribing = false;
    private Contact contact = new Contact();
    private string contactFormStatus = string.Empty;
    private bool showGiftOffer = false;

    private async Task GetGiftBySubscribeNewsLetter()
    {
        Logger.LogInformation("SubscribeToNewsLetter method called");
        if (!string.IsNullOrWhiteSpace(emailSubscription.Email))
        {
            await InvokeAsync(() =>
            {
                isSubscribing = true;
                StateHasChanged();
            });

            try
            {
                Logger.LogInformation($"Attempting to subscribe with email: {emailSubscription.Email}");

                var result = await EmailSubscriptionService.SubscriptionGiftAsync(emailSubscription.Email);

                await InvokeAsync(() =>
                {
                    subscriptionSuccess = result;
                    subscriptionMessage = result ? "Thank you! Your submission has been received!" : "Subscription failed. Please try again or contact support.";

                    if (result) 
                    {
                        emailSubscription = new EmailSubscription();  // Reset the form
                    }

                    StateHasChanged();
                });

                Logger.LogInformation($"Subscription result: {result}");
            }
            catch (Exception ex)
            {
                await InvokeAsync(() =>
                {
                    subscriptionMessage = "An error occurred. Please try again later.";
                    StateHasChanged();
                });

                Logger.LogError(ex, "Error during subscription");
            }
            finally
            {
                await InvokeAsync(() =>
                {
                    isSubscribing = false;
                    StateHasChanged();
                });
            }
        }

        Logger.LogInformation("SubscribeToNewsLetter method completed");
    }

    private async Task ContactSubmit()
    {
        
        Logger.LogInformation("ContactSubmit method called");

        try
        {
            Logger.LogInformation("Attempting to send contact information");

            var result = await ContactService.ContactSubmitAsync(contact);
        
            contactFormStatus = result ? "Thank you for your message. I'll get back to you soon!" : "Sending contact information failed. Please try again or contact support.";

            if (result)
            {
                contact = new Contact(); // Reset the form
            }

            StateHasChanged();
        }
        catch(Exception ex)
        {
            subscriptionMessage = "An error occurred. Please try again later.";
            StateHasChanged();

            Logger.LogError(ex, "Error during ContactSubmit");
        }
        
         Logger.LogInformation("ContactSubmit method completed");
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("Index page initialized");
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("Index page parameters set");
    }

    private void ShowGiftOffer()
    {
        showGiftOffer = true;
        subscriptionMessage = string.Empty;
        subscriptionSuccess = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("document.addEventListener", "keydown", DotNetObjectReference.Create(this), "HandleKeyDown");
        }
    }

    [JSInvokable]
    public void CloseGiftOffer()
    {
        showGiftOffer = false;
        StateHasChanged();
    }

    private void CloseGiftOfferIfClickedOutside()
    {
        if (showGiftOffer)
        {
            CloseGiftOffer();
        }
    }

}
