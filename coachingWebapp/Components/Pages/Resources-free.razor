@page "/resources/free"
@using BusinessLayer.Services.Interfaces
@using ModelLayer.Models

@rendermode InteractiveServer

@inject IEmailSubscriptionService EmailSubscriptionService
@inject ILogger<Resources_free> Logger

<PageTitle>@pageTitle</PageTitle>

<div class="resources-page">
    <div class="resources-container">
        <h1><span class="highlight">Free</span>  Resources</h1>

        <div class="resources-grid">
            <div class="resource-card">
                <img src="Images/services/free-resources/resource1.png" alt="Shape Your Power: A 30-Day Inner Peace Challenge" class="card-image" />
                <div class="card-content">
                    <h3>Find Your Calm, Shape Your Power: A 30-Day Inner Peace Challenge</h3>
                    <p>Unlock clarity, purpose, and resilience through daily mindfulness and transformational practices. Let’s make 2025 your year of peace and empowerment.</p>
                    <div class="card-buttons">
                        <button class="primary-button" @onclick="() => ShowGiftOffer(GiftCategory.Gift1)">
                            <i class="fa-solid fa-download"></i> Get Resource
                        </button>
                    </div>
                </div>
            </div>

            <div class="resource-card">
                <img src="Images/services/free-resources/resource2.jpg" alt="Focused, Fresh, and Fearless" class="card-image" />
                <div class="card-content">
                    <h3>Master Your 2025: Focused, Fresh, and Fearless</h3>
                    <p>Unlock your guide to a purposeful, stress-free, successful year — Be Unstoppable.</p>
                    <div class="card-buttons">
                        <button class="primary-button" @onclick="() => ShowGiftOffer(GiftCategory.Gift2)">
                            <i class="fa-solid fa-download"></i> Get Resource
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="video-section-wrapper">
            <div id="video-section" class="resource-video-container">
                <div class="video-wrapper">
                    <iframe 
                        src="https://www.youtube.com/embed/O2fuq93-RpI?list=PLULszcAHU2BO2YIwTB0p_s8T7bKCHrivf"
                        title="30 Days Self Discovery Challenge Playlist Preview"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        allowfullscreen
                        loading="lazy">
                    </iframe>
                </div>
            </div>
            
            <div class="video-description">
                <h2>Preview Our <span class="highlight">Challenge</span> Playlist</h2>
                <p>Embark on a transformative journey with our carefully curated video series designed to guide you through personal growth and self-discovery. Each video offers practical insights and actionable steps to help you cultivate mindfulness, build resilience, and create lasting positive change in your life.</p>
                <p>Whether you're new to personal development or looking to deepen your practice, our challenge playlist provides the perfect blend of inspiration and practical guidance.</p>
            </div>
        </div>

    </div>

</div>
@if (showGiftOffer)
{
    <div class="gift-modal" @onclick="CloseGiftOfferIfClickedOutside">
        <div class="gift-modal-content" @onclick:stopPropagation>
            <h3>Unlock Your Free Guide!</h3>
            <p>Get instant access to expert tips and strategies to jumpstart your journey. <b>Your success story begins here.</b></p>
            <EditForm Model="@emailSubscription" OnValidSubmit="GetGiftBySubscribeNewsLetter">
                <DataAnnotationsValidator />

                @if (isSubscribing)
                {
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p>Subscribing...</p>
                    </div>
                }
                else
                {
                    <InputText id="email" class="form-control" @bind-Value="emailSubscription.Email" placeholder="Enter your email" />
                    <button type="submit" class="btn btn-primary">Get Free Guide</button>
                    <ValidationMessage For="@(() => emailSubscription.Email)" class="text-danger" />
                    <p class="privacy-notice">By signing up, you're agreeing to receive marketing emails from Jostic. You can unsubscribe at any time. For more details, check out our <a href="/privacy-policy">Privacy Policy</a>.</p>
                }
            </EditForm>

            @if (!string.IsNullOrEmpty(subscriptionMessage))
            {
                <div class="alert @(subscriptionSuccess ? "alert-success" : "alert-danger") mt-3" role="alert">
                    @subscriptionMessage
                </div>
            }

            <button class="close-button" @onclick="CloseGiftOffer"><i class="fa-solid fa-circle-xmark"></i></button>
        </div>
    </div>
}

@code {
    private string pageTitle = "Free Resources | Ítala Veloso";
    private EmailSubscription emailSubscription = new EmailSubscription();
    private string subscriptionMessage;
    private bool subscriptionSuccess = false;
    private bool isSubscribing = false;
    private bool showGiftOffer = false;
    private GiftCategory giftCategory;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ScrollService.ScrollToTop();
        }
    }

    private async Task GetGiftBySubscribeNewsLetter()
    {
        Logger.LogInformation("GetGiftBySubscribeNewsLetter method called");

        if (!string.IsNullOrWhiteSpace(emailSubscription.Email))
        {
            isSubscribing = true;
            StateHasChanged();

            try
            {
                emailSubscription.Gift = giftCategory;
                var result = await EmailSubscriptionService.SubscriptionGiftAsync(emailSubscription);
                subscriptionSuccess = result;
                subscriptionMessage = result ? "Thank you! The resource will be sent to your email shortly!" : "Something went wrong. Please try again or contact support.";

                if (result)
                {
                    emailSubscription = new EmailSubscription();  // Reset form
                }
            }
            catch (Exception ex)
            {
                subscriptionMessage = "An error occurred. Please try again later.";
                Logger.LogError(ex, "Error during subscription");
            }
            finally
            {
                isSubscribing = false;
                StateHasChanged();
            }
        }
    }

    private void ShowGiftOffer(GiftCategory gift)
    {
        giftCategory = gift;
        showGiftOffer = true;
        subscriptionMessage = string.Empty;
        subscriptionSuccess = false;
        StateHasChanged();
    }

    private void CloseGiftOffer()
    {
        showGiftOffer = false;
        StateHasChanged();
    }

    private void CloseGiftOfferIfClickedOutside()
    {
        if (showGiftOffer)
        {
            CloseGiftOffer();
        }
    }
}
